name: Build and Push App Docker Image (Multi-arch)

on:
  push:
    branches:
      - main
      - master
    paths:
      - "Dockerfile"
      - "*.py"
      - ".github/workflows/docker-build-app.yml"
    tags:
      - "v*"
      - "app-v*"
  pull_request:
    branches:
      - main
      - master
    paths:
      - "Dockerfile"
      - "main.py"
      - "bailing/**"
      - "config/**"
      - "plugins/**"
      - "server/**"
      - ".github/workflows/docker-build-app.yml"

env:
  REGISTRY: ghcr.io
  BUILDER_IMAGE_NAME: ${{ github.repository }}-builder
  APP_IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-app:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Free up disk space
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo docker system prune -af

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for app image
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.APP_IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=raw,value=latest,enable={{is_default_branch}}

      - name: Build and push multi-arch
        run: |
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            --file ./Dockerfile \
            --build-arg BUILDER_IMAGE=${{ env.REGISTRY }}/${{ env.BUILDER_IMAGE_NAME }}:latest \
            --tag ${{ env.REGISTRY }}/${{ env.APP_IMAGE_NAME }}:latest \
            $(echo "${{ steps.meta.outputs.tags }}" | sed 's/^/--tag /' | tr '\n' ' ') \
            --cache-from type=gha,scope=app \
            --cache-to type=gha,mode=max,scope=app \
            --push .
